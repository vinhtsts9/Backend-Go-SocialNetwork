// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"
	"database/sql"
)

type Querier interface {
	AddMemberToRoomChat(ctx context.Context, arg AddMemberToRoomChatParams) error
	// AddOrUpdateEmail
	AddOrUpdateEmail(ctx context.Context, arg AddOrUpdateEmailParams) error
	// AddOrUpdatePhoneNumber
	AddOrUpdatePhoneNumber(ctx context.Context, arg AddOrUpdatePhoneNumberParams) error
	// AddPermissionToRole
	AddPermissionToRole(ctx context.Context, arg AddPermissionToRoleParams) error
	AddReplyCommentParent(ctx context.Context, id int32) error
	// file: rbac_queries.sql
	// AddRoleToUser
	AddRoleToUser(ctx context.Context, arg AddRoleToUserParams) error
	// -- name: UpdatePassword :exec
	// UPDATE `user_info` SET user_password = ? WHERE user_id = ?;
	AddUserAutoUserId(ctx context.Context, arg AddUserAutoUserIdParams) (sql.Result, error)
	AddUserBase(ctx context.Context, arg AddUserBaseParams) (sql.Result, error)
	AddUserHaveUserId(ctx context.Context, arg AddUserHaveUserIdParams) (sql.Result, error)
	CheckUserBaseExists(ctx context.Context, userAccount string) (int64, error)
	// CheckUserPermission
	CheckUserPermission(ctx context.Context, userID sql.NullInt64) (Permission, error)
	// CountActiveTwoFactorMethods
	CountActiveTwoFactorMethods(ctx context.Context, userID uint32) (int64, error)
	CreateComment(ctx context.Context, arg CreateCommentParams) (sql.Result, error)
	// CreatePermission
	CreatePermission(ctx context.Context, arg CreatePermissionParams) error
	// Create a new post
	CreatePost(ctx context.Context, arg CreatePostParams) (sql.Result, error)
	// CreateRole
	CreateRole(ctx context.Context, arg CreateRoleParams) error
	CreateRoomChat(ctx context.Context, arg CreateRoomChatParams) error
	DeleteCommentsInRange(ctx context.Context, arg DeleteCommentsInRangeParams) error
	DeleteMemberFromRoomChat(ctx context.Context, arg DeleteMemberFromRoomChatParams) error
	// Delete a post
	DeletePost(ctx context.Context, id uint64) error
	// DisableTwoFactor
	DisableTwoFactor(ctx context.Context, arg DisableTwoFactorParams) error
	EditUserByUserId(ctx context.Context, arg EditUserByUserIdParams) (sql.Result, error)
	// file: 0004_user_two_factor.sql
	// EnableTwoFactor
	EnableTwoFactorTypeEmail(ctx context.Context, arg EnableTwoFactorTypeEmailParams) error
	FindUsers(ctx context.Context, arg FindUsersParams) ([]UserInfo, error)
	// Get all post
	GetAllpost(ctx context.Context, followerID sql.NullInt64) ([]GetAllpostRow, error)
	GetChatHistory(ctx context.Context, roomID sql.NullInt64) ([]GetChatHistoryRow, error)
	GetCommentByID(ctx context.Context, id int32) (Comment, error)
	GetCommentByLastInsertId(ctx context.Context, id int32) (Comment, error)
	GetCommentByParentID(ctx context.Context, arg GetCommentByParentIDParams) ([]Comment, error)
	GetFollowersByUserId(ctx context.Context, followingID sql.NullInt64) ([]GetFollowersByUserIdRow, error)
	GetInfoOTP(ctx context.Context, verifyKeyHash string) (UserVerify, error)
	GetMaxRightComment(ctx context.Context, postID uint64) (int32, error)
	GetMemberGroup(ctx context.Context, roomID int64) ([]GetMemberGroupRow, error)
	GetOneUserInfo(ctx context.Context, userAccount string) (GetOneUserInfoRow, error)
	// GetPermissionsByRoleID
	GetPermissionsByRoleID(ctx context.Context, roleID sql.NullInt32) ([]GetPermissionsByRoleIDRow, error)
	// GetPermissionsByUserID
	GetPermissionsByUserID(ctx context.Context, userID sql.NullInt64) ([]GetPermissionsByUserIDRow, error)
	// Get post by ID
	GetPostById(ctx context.Context, id uint64) (GetPostByIdRow, error)
	// GetRoleByID
	GetRoleByID(ctx context.Context, id int32) (Role, error)
	// GetRolesByUserID
	GetRolesByUserID(ctx context.Context, userID sql.NullInt64) ([]Role, error)
	GetRoomByUserId(ctx context.Context, userID uint64) ([]ChatRoom, error)
	GetRootComment(ctx context.Context, postID uint64) ([]Comment, error)
	// GetTwoFactorMethodByID
	GetTwoFactorMethodByID(ctx context.Context, twoFactorID uint32) (UserTwoFactor, error)
	// GetTwoFactorMethodByIDAndType: select lay email de sen otp
	GetTwoFactorMethodByIDAndType(ctx context.Context, arg GetTwoFactorMethodByIDAndTypeParams) (UserTwoFactor, error)
	// GetTwoFactorStatus
	GetTwoFactorStatus(ctx context.Context, arg GetTwoFactorStatusParams) (bool, error)
	GetUser(ctx context.Context, userID uint64) (UserInfo, error)
	GetUserState(ctx context.Context, userAccount string) ([]GetUserStateRow, error)
	// GetUserTwoFactorMethods
	GetUserTwoFactorMethods(ctx context.Context, userID uint32) ([]UserTwoFactor, error)
	GetUsers(ctx context.Context, userID uint64) ([]UserInfo, error)
	GetValidOTP(ctx context.Context, verifyKeyHash string) (GetValidOTPRow, error)
	// Get post by user ID
	GetpostByUserId(ctx context.Context, userID uint64) ([]GetpostByUserIdRow, error)
	InsertOTPVerify(ctx context.Context, arg InsertOTPVerifyParams) (sql.Result, error)
	// IsTwoFactorEnabled
	IsTwoFactorEnabled(ctx context.Context, userID uint32) (int64, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]UserInfo, error)
	LoginUserBase(ctx context.Context, arg LoginUserBaseParams) error
	LogoutUserBase(ctx context.Context, userAccount string) error
	// ReactivateTwoFactor
	ReactivateTwoFactor(ctx context.Context, arg ReactivateTwoFactorParams) error
	// RemovePermissionFromRole
	RemovePermissionFromRole(ctx context.Context, arg RemovePermissionFromRoleParams) error
	// RemoveRoleFromUser
	RemoveRoleFromUser(ctx context.Context, arg RemoveRoleFromUserParams) error
	// RemoveTwoFactor
	RemoveTwoFactor(ctx context.Context, arg RemoveTwoFactorParams) error
	RemoveUser(ctx context.Context, userID uint64) error
	SetChatHistory(ctx context.Context, arg SetChatHistoryParams) error
	UpdateAvatar(ctx context.Context, arg UpdateAvatarParams) (sql.Result, error)
	UpdateCommentLeft(ctx context.Context, arg UpdateCommentLeftParams) error
	UpdateCommentLeftCreate(ctx context.Context, arg UpdateCommentLeftCreateParams) error
	UpdateCommentRight(ctx context.Context, arg UpdateCommentRightParams) error
	UpdateCommentRightCreate(ctx context.Context, arg UpdateCommentRightCreateParams) error
	// Update a post
	UpdatePost(ctx context.Context, arg UpdatePostParams) (sql.Result, error)
	// UpdateTwoFactorStatusVerification
	UpdateTwoFactorStatus(ctx context.Context, arg UpdateTwoFactorStatusParams) error
	UpdateUserState(ctx context.Context, arg UpdateUserStateParams) error
	// update lai
	UpdateUserVerificationStatus(ctx context.Context, verifyKeyHash string) error
	// VerifyTwoFactor
	VerifyTwoFactor(ctx context.Context, arg VerifyTwoFactorParams) (int64, error)
}

var _ Querier = (*Queries)(nil)
