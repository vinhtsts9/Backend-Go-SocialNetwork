version: '3'
services:
  social.network.com:
    container_name: go_backend_socialnetwork
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./configs:/configs
    links: 
      - mysql
      - redis
      - kafka
      - elasticsearch
    depends_on: 
      - mysql
      - redis
      - kafka
      - elasticsearch
    ports:
      - "8008:8080"
    networks:
      - my_master_slave_sql

  mysql:
    image: mysql:8.0
    container_name: mysql8-master
    ports: 
      - 8811:3306
    networks:
      - my_master_slave_sql
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: test
  redis:
    image: redis
    container_name: rdb
    ports:
      - 6379:6379
    networks:
      - my_master_slave_sql
    volumes:
      - redis_data:/data
  zookeeper:
    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}
    container_name: demo_zookeeper
    ports:
     - 2181:2181
    networks:
     - my_master_slave_sql

  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    container_name: demo_kafka
    ports:
     - 9092:9092
     - 29092:29092
    links:
     - zookeeper
    depends_on:
     - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      ZOOKEEPER_CONNECT: demo_zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://demo_kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - my_master_slave_sql

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: demo_kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: demo_kafka:29092
    ports:
      - "9089:8080"
    links:
      - kafka
    depends_on:
      - kafka
    networks:
      - my_master_slave_sql

  connect:
    image: quay.io/debezium/connect:${DEBEZIUM_VERSION}
    container_name: demo_connect
    ports:
     - 8083:8083
    links:
     - kafka
    depends_on:
     - kafka
    volumes:
     - /opt/kafka/plugins:/kafka/connect/plugins #chứa connector của elasticsearch
     - /mysql/connectKafka:/kafka/connect/mysql #chứa connector của mysql

    environment:
     - CONNECT_PLUGIN_PATH=/kafka/connect/plugins,/kafka/connect/mysql
     - BOOTSTRAP_SERVERS=demo_kafka:29092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - DATABASE_HOSTNAME=mysql8-master  # Kết nối tới MySQL đã cài
     - DATABASE_PORT=3306
     - DATABASE_USER=root
     - DATABASE_PASSWORD=123456
     - DATABASE_NAME=test
    networks:
     - my_master_slave_sql
  elasticsearch:
    image: elasticsearch:7.17.25
    container_name: elasticsearch
    environment:
     - discovery.type=single-node
    ports:
     - "9200:9200"
    networks:
     - my_master_slave_sql

networks:
  my_master_slave_sql:
    external: true
volumes:
  mysql_data:
  redis_data: